; Programa Soma de dois números de 1 dígito
; Introdução ao Assembly
; Author: Gabriel, FEAP
; Version: Gabriel Santana dos Santos, curso Engenharia da Computação

SYS_EXIT    equ 1
SYS_READ    equ 3
SYS_WRITE   equ 4
STDIN       equ 0
STDOUT      equ 1

section .data
    ; Mensagem para informar o primeiro número
    msg1 db 'Insira um dígito',0xa,0xd
    len1 equ $-msg1

    ; Mensagem para informar o segundo número
    msg2 db 'Insira o segundo dígito',0xa,0xd
    len2 equ $-msg2

    ; Mensagem para informar o resultado (soma)
    msg3 db 'A soma é:'
    len3 equ $-msg3

    ; Mensagem de erro
    msg_err db 'Erro: A soma é maior que 9 (BURRO??)!',0xa,0xd
    len_err equ $-msg_err

section .bss
    ; Declaração de variáveis a serem processadas
    num1 resb 2
    num2 resb 2
    res resb 2

section .text
    global _start

_start:
    ; Imprime a mensagem msg1
    mov eax, SYS_WRITE
    mov ebx, STDOUT
    mov ecx, msg1
    mov edx, len1
    int 0x80

    ; Lê o primeiro número
    mov eax, SYS_READ
    mov ebx, STDIN
    mov ecx, num1
    mov edx, 2
    int 0x80

    ; Imprime a mensagem msg2
    mov eax, SYS_WRITE
    mov ebx, STDOUT
    mov ecx, msg2
    mov edx, len2
    int 0x80

    ; Lê o segundo número
    mov eax, SYS_READ
    mov ebx, STDIN
    mov ecx, num2
    mov edx, 2
    int 0x80

    ; Move o primeiro número para o registro al e converte para DEC (decimal)
    mov al, [num1]
    sub al, '0'

    ; Move o segundo número para o registro bl e converte para DEC (decimal)
    mov bl, [num2]
    sub bl, '0'

    ; Soma al e bl
    add al, bl

    ; Verifica se a soma é maior que 9 (um dígito)
    cmp al, 9
    jg .erro

    ; Converte de decimal para ASCII
    add al, '0'

    ; Armazena a soma na localização de memória 'res'
    mov [res], al

    ; Imprime a mensagem msg3
    mov eax, SYS_WRITE
    mov ebx, STDOUT
    mov ecx, msg3
    mov edx, len3
    int 0x80

    ; Imprime o resultado
    mov eax, SYS_WRITE
    mov ebx, STDOUT
    mov ecx, res
    mov edx, 2
    int 0x80

    ; Sair do programa
    mov eax, SYS_EXIT
    xor ebx, ebx9
    int 0x80

    .erro:
    ; Imprime a mensagem de erro
    mov eax, SYS_WRITE
    mov ebx, STDOUT
    mov ecx, msg_err
    mov edx, len_err
    int 0x80

    ; Sair com código de erro
    mov eax, SYS_EXIT
    mov ebx, 1
    int 0x80
